{"version":3,"sources":["reportWebVitals.ts","components/GameCard/GameCardWithDeleteButton.tsx","components/Lists/GameList.tsx","components/NavigationBar/NavigationBar.tsx","pages/Cart.tsx","components/Slideshow/GamePageSlideshowItemYoutube.tsx","components/Slideshow/GamePageSlideshowItem.tsx","components/Slideshow/GamePageSlideshow.tsx","pages/Game.tsx","components/GameCard/GameCardWithPrice.tsx","components/Headings/SecondHeading.tsx","components/Slideshow/HomeSlideshowItem.tsx","components/Slideshow/HomeSlideshowSidebarItem.tsx","components/Slideshow/HomeSlideshow.tsx","pages/Home.tsx","components/GameCard/GameCardWithHours.tsx","components/Searchbar/GameSearchbar.tsx","pages/Library.tsx","pages/LoadingScreen.tsx","pages/Profile.tsx","pages/Search.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GameCardWithDeleteButtonComponent","props","className","src","vertical","alt","process","width","height","onClick","fetch","method","headers","body","gameId","data","magiCounterSet","magicCounter","gameName","gameDeveloper","newPrice","Intl","NumberFormat","style","format","oldPrice","GameListComponent","games","NavigationBarComponent","exact","to","activeClassName","CartPage","useState","totalPrice","setTotalPrice","fetchedGames","setFetchedGames","setMagicCouner","useEffect","responce","json","totalCost","reduce","previous","current","isInSale","gameSalePrice","gamePrice","map","game","gameDescription","developer","images","id","GamePageSlideshowItemYoutubeComponent","video","allow","allowFullScreen","GamePageSlideshowItemComponent","active","isVideo","GamePageSlideshowComponent","fetchedSlides","setFetchedSlides","setActive","slides","setSlides","videos","concat","horizontal","sslides","name","findIndex","length","index","GamePage","curLoc","useParams","gameData","setGameData","response","logo","isInCart","curData","GameCardWithPriceComponent","currentPage","useLocation","pathname","SecondHeadingComponent","headingText","HomeSlideshowItemComponent","gameToDisplay","setImg","activeGameName","HomeSlideshowSidebarItemComponent","activeSlideName","HomeSlideshowComponent","gamesInSpotlight","setGamesInSpotlight","currentActiveGameCounter","setActiveGameCouner","currentActiveGame","setActiveGame","setTimeout","spotlightGames","HomePage","gamesInSale","setGamesInSale","gamessInSale","gameInfo","slice","GameCardWithHoursComponent","minutes","minutesInGame","hours","days","totalPlayedParsed","GameSearchbarComponent","type","placeholder","value","searchbarString","onChange","e","setSearchString","target","LibraryPage","searchString","hoursInGame","LoadingScreenPage","isEnding","ProfilePage","htmlFor","disabled","SearchPage","App","isFirstLoad","setFirstLoad","isLoadingEnded","setLoadingEnded","basename","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e895a93.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./GameCardWithDeleteButton.css\";\nimport \"./GameCard.css\";\n\ninterface CardProps {\n  gameName: string;\n  gameId: string;\n  gameDeveloper: string;\n  gameDescription: string;\n  oldPrice: number;\n  newPrice: number;\n  vertical: Array<string>;\n  magicCounter: number;\n  magiCounterSet: (number: number) => void;\n}\n\nexport default function GameCardWithDeleteButtonComponent(props: CardProps) {\n  return (\n    <div className=\"game-card\">\n      <div className=\"game-card__overlay\"></div>\n\n      <div className=\"img-container\">\n        <img className=\"game-card__img\" src={props.vertical[0]} alt=\"\" />\n        <img\n          className=\"delete-button\"\n          src={process.env.PUBLIC_URL + \"/resources/delete.svg\"}\n          // type=\"\"\n          width=\"24\"\n          height=\"24\"\n          onClick={() => {\n            fetch(\"https://japanese-point.herokuapp.com/api/v1/update/\", {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: `{\"id\": \"${props.gameId}\", \"isInCart\":false}`,\n            }).then((data) => props.magiCounterSet(props.magicCounter + 1));\n          }}\n        ></img>\n      </div>\n      <div className=\"game-card__content-container\">\n        <div className=\"game-card__name\">{props.gameName}</div>\n        <div className=\"game-card__developer\">{props.gameDeveloper}</div>\n        <div className=\"price-container\">\n          {props.newPrice ? (\n            <div className=\"game-card__discount-percent\">\n              {\"-\" +\n                new Intl.NumberFormat(\"en-GB\", {\n                  style: \"percent\",\n                }).format(props.newPrice / props.oldPrice)}\n            </div>\n          ) : (\n            <></>\n          )}\n\n          <div className={props.newPrice ? \"old-price\" : \"current-price\"}>\n            {props.oldPrice === 0 ? \"Free\" : props.oldPrice + \" rub\"}\n          </div>\n          {props.newPrice ? (\n            <div className=\"new-price\">{props.newPrice + \" rub\"}</div>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./GameList.css\";\n\n// TODO There is an erro in Library.tsx fix it.\n// TODO Make it wrap in mobile\n\ninterface GameListProps {\n  games: any;\n}\n\n// TODO Make list actual list\nexport default function GameListComponent(props: GameListProps) {\n  return <div className=\"game-list\">{props.games}</div>;\n}\n","import { Link, NavLink } from \"react-router-dom\";\nimport \"./NavigationBar.css\";\n\n// TODO Make it transform in mobile into hamburger menu\n\nexport default function NavigationBarComponent() {\n  return (\n    <nav className=\"navigation\">\n      <ul className=\"navigation__list\">\n        <NavLink className=\"deactive\" exact to=\"/\">\n          <li className=\"navigation__logo-container\">\n            <img\n              className=\"navigation__logo\"\n              src={process.env.PUBLIC_URL + \"/resources/Logo.svg\"}\n              alt=\"\"\n            />\n          </li>\n        </NavLink>\n        <NavLink activeClassName=\"active\" exact to=\"/\">\n          <li className=\"navigation__item2\">Home</li>\n        </NavLink>\n        <NavLink activeClassName=\"active\" to=\"/search\">\n          <li className=\"navigation__item3\">Search</li>\n        </NavLink>\n        <NavLink activeClassName=\"active\" to=\"/library\">\n          <li className=\"navigation__item4\">Library</li>\n        </NavLink>\n        <NavLink\n          activeClassName=\"active\"\n          to=\"/cart\"\n          className=\"navigation__item5\"\n        >\n          <li className=\"navigation__cart-container\">\n            <img\n              className=\"cart\"\n              src={process.env.PUBLIC_URL + \"/resources/cart.svg\"}\n              alt=\"\"\n            />\n          </li>\n        </NavLink>\n        <NavLink activeClassName=\"active\" to=\"/profile\">\n          <li className=\"navigation__user-container\">\n            <img src={process.env.PUBLIC_URL + \"/resources/user.svg\"} alt=\"\" />\n          </li>\n        </NavLink>\n      </ul>\n    </nav>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport GameCardWithDeleteButtonComponent from \"../components/GameCard/GameCardWithDeleteButton\";\nimport GameListComponent from \"../components/Lists/GameList\";\nimport NavigationBarComponent from \"../components/NavigationBar/NavigationBar\";\nimport { gameDummyData } from \"../gameDummyData\";\nimport \"./Cart.css\";\nimport { GameInterface } from \"./Search\";\n\nexport default function CartPage() {\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [fetchedGames, setFetchedGames] = useState<Array<GameInterface>>();\n  const [magicCounter, setMagicCouner] = useState(0);\n\n  useEffect(() => {\n    fetch(\"https://japanese-point.herokuapp.com/api/v1/search\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: `{\"isInCart\": true }`,\n    })\n      .then((responce) => responce.json())\n      .then((data) => setFetchedGames(data));\n  }, [magicCounter]);\n\n  useEffect(() => {\n    let totalCost = 0;\n    totalCost = fetchedGames\n      ? fetchedGames.reduce((previous, current) => {\n          let curPrice = current.isInSale\n            ? current.gameSalePrice!!\n            : current.gamePrice!!;\n          return previous + curPrice!!;\n        }, 0)\n      : 0;\n    setTotalPrice(totalCost);\n  }, [fetchedGames]);\n\n  const games = fetchedGames?.map((game) => {\n    return (\n      <GameCardWithDeleteButtonComponent\n        gameDescription={game.gameDescription}\n        gameDeveloper={game.developer}\n        gameName={game.gameName}\n        newPrice={game.gameSalePrice!!}\n        oldPrice={game.gamePrice}\n        key={game.gameName}\n        vertical={game.images.vertical}\n        gameId={game.id}\n        magicCounter={magicCounter}\n        magiCounterSet={setMagicCouner}\n      />\n    );\n  });\n\n  return (\n    <div className=\"cart-page\">\n      <NavigationBarComponent />\n      <div className=\"cart-page-container\">\n        <GameListComponent games={games} />\n        <div className=\"order-final\">\n          <p className=\"cart-page__price-container\">\n            {\"Total price: \"}\n            <span className=\"cart-page__price\">{totalPrice}</span>\n          </p>\n          <button className=\"order-button\">ORDER</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./GamePageSlideshowItemYoutube.css\";\r\n\r\ninterface SlideshowYoutubeProps {\r\n  video: string;\r\n}\r\n\r\nexport default function GamePageSlideshowItemYoutubeComponent(\r\n  props: SlideshowYoutubeProps\r\n) {\r\n  return (\r\n    <iframe\r\n      className=\"youtube-iframe-slideshow\"\r\n      src={props.video}\r\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n      allowFullScreen\r\n    ></iframe>\r\n  );\r\n}\r\n","import \"./GamePageSlideshowItem.css\";\nimport GamePageSlideshowItemYoutubeComponent from \"./GamePageSlideshowItemYoutube\";\n\ninterface SlideProps {\n  isVideo: boolean;\n  gameName: string;\n  active: string;\n}\n\nexport default function GamePageSlideshowItemComponent(props: SlideProps) {\n  return (\n    <div className={props.gameName === props.active ? \"slide\" : \"notCurrent\"}>\n      {props.isVideo ? (\n        <GamePageSlideshowItemYoutubeComponent video={props.gameName} />\n      ) : (\n        <img src={props.gameName}></img>\n      )}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport GamePageSlideshowItemComponent from \"./GamePageSlideshowItem\";\nimport \"./GamePageSlideshow.css\";\nimport { JsxElement } from \"typescript\";\n\ninterface GamePageSlideshowProps {\n  horizontal: Array<string>;\n  videos: Array<string>;\n}\n\nexport default function GamePageSlideshowComponent(\n  props: GamePageSlideshowProps\n) {\n  const [fetchedSlides, setFetchedSlides] = useState([\"\"]);\n\n  const [active, setActive] = useState(\"\");\n  const [slides, setSlides] = useState<Array<JSX.Element>>();\n\n  useEffect(() => {\n    setFetchedSlides(props.videos?.concat(props.horizontal));\n  }, [props]);\n\n  useEffect(() => {\n    if (!active) setActive(fetchedSlides?.[0]);\n    let sslides = fetchedSlides?.map((name) => {\n      return (\n        <GamePageSlideshowItemComponent\n          isVideo={fetchedSlides[0] == name}\n          key={name}\n          gameName={name}\n          active={active}\n        />\n      );\n    });\n\n    setSlides(sslides);\n  }, [fetchedSlides, active]);\n\n  function nextSlide() {\n    const current = fetchedSlides.findIndex((name) => name === active);\n    setActive(fetchedSlides[(current + 1) % 3]);\n  }\n\n  function previousSlide() {\n    const current = fetchedSlides.findIndex((name) => name === active);\n    setActive(\n      current - 1 < 0\n        ? fetchedSlides[fetchedSlides.length - 1]\n        : fetchedSlides[current - 1]\n    );\n  }\n\n  return (\n    <div className=\"slideshow-wrapper\">\n      <div className=\"slideshow\">{slides}</div>\n      <div className=\"slideshow-controls\">\n        <div className=\"left-btn\" onClick={previousSlide}>\n          {\"<\"}\n        </div>\n        <div className=\"slideshow-controls__dots\">\n          {fetchedSlides?.map((name, index) => {\n            return (\n              <div\n                className={name === active ? \"active-dot\" : \"notactive-dot\"}\n                onClick={() => {\n                  setActive(fetchedSlides?.[index]);\n                }}\n              ></div>\n            );\n          })}\n        </div>\n        <div className=\"right-btn\" onClick={nextSlide}>\n          {\">\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { RouteComponentProps, useParams } from \"react-router\";\nimport SecondHeadingComponent from \"../components/Headings/SecondHeading\";\nimport NavigationBarComponent from \"../components/NavigationBar/NavigationBar\";\nimport GamePageSlideshowComponent from \"../components/Slideshow/GamePageSlideshow\";\nimport \"./Game.css\";\nimport { GameInterface } from \"./Search\";\n\n// TODO Split file into components\n// TODO Make component out of a price\n\ninterface GamePageParam {\n  gameId: string;\n}\n\nexport default function GamePage(props: RouteComponentProps) {\n  const curLoc: GamePageParam = useParams();\n  const [gameData, setGameData] = useState<Array<GameInterface>>();\n\n  useEffect(() => {\n    fetch(\"https://japanese-point.herokuapp.com/api/v1/search\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: `{\"id\": \"${curLoc.gameId}\"}`,\n    })\n      .then((response) => response.json())\n      .then((data) => setGameData(data));\n  }, [gameData]);\n\n  return (\n    <div className=\"game-page\">\n      <NavigationBarComponent />\n      <div className=\"game-page__content\">\n        <div className=\"game-page__nav-line\">\n          <div className=\"game-page__come-back\">\n            <img src=\"#\" alt=\"\" className=\"game-page__back-arrow\" />\n            <p className=\"game-page__back-text\">Return</p>\n          </div>\n          <div className=\"game-page__text-separator\"></div>\n          <div className=\"game-page__current-game\">\n            {gameData?.[0].gameName}\n          </div>\n        </div>\n        <div className=\"game-page__game-title\">{gameData?.[0].gameName}</div>\n        <div className=\"game-page__main-info\">\n          <div className=\"game-page__slideshow-container\">\n            <GamePageSlideshowComponent\n              horizontal={gameData?.[0].images.horizontal!!}\n              videos={gameData?.[0].videos!!}\n            />\n          </div>\n          <div className=\"game-page__buy-info\">\n            <img\n              src={gameData?.[0].images.logo}\n              alt=\"\"\n              className=\"game-page__logo\"\n            />\n            <div className=\"price-container\">\n              {gameData?.[0].gameSalePrice ? (\n                <div className=\"game-card__discount-percent\">\n                  {\"-\" +\n                    new Intl.NumberFormat(\"en-GB\", {\n                      style: \"percent\",\n                    }).format(\n                      gameData?.[0].gameSalePrice / gameData?.[0].gamePrice\n                    )}\n                </div>\n              ) : (\n                <></>\n              )}\n\n              <div\n                className={\n                  gameData?.[0].gameSalePrice ? \"old-price\" : \"current-price\"\n                }\n              >\n                {gameData?.[0].gamePrice === 0\n                  ? \"Free\"\n                  : gameData?.[0].gamePrice + \" rub\"}\n              </div>\n              {gameData?.[0].gameSalePrice ? (\n                <div className=\"new-price\">\n                  {gameData?.[0].gameSalePrice + \" rub\"}\n                </div>\n              ) : (\n                <></>\n              )}\n            </div>\n            {gameData?.[0].isInCart ? (\n              <button className=\"game-page__buy-button\">Already in cart</button>\n            ) : (\n              <button\n                className=\"game-page__buy-button\"\n                onClick={() => {\n                  fetch(\"https://japanese-point.herokuapp.com/api/v1/update/\", {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: `{\"id\": \"${curLoc.gameId}\", \"isInCart\":true}`,\n                  }).then((data) => {\n                    let curData = gameData;\n                    curData![0].isInCart = true;\n                    setGameData(curData);\n                  });\n                }}\n              >\n                Add to cart\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./GameCardWithPrice.css\";\nimport \"./GameCard.css\";\nimport { Link, useLocation } from \"react-router-dom\";\n\ninterface CardProps {\n  gameName: string;\n  gameId: string;\n  gameDeveloper: string;\n  gameDescription: string;\n  oldPrice: number;\n  newPrice: number;\n  vertical: Array<string>;\n}\n\nexport default function GameCardWithPriceComponent(props: CardProps) {\n  const currentPage = useLocation();\n\n  if (currentPage.pathname.length === 1) {\n    currentPage.pathname = \"\";\n  }\n\n  return (\n    <Link className=\"game-card\" to={currentPage.pathname + \"/\" + props.gameId}>\n      <div className=\"img-container\">\n        <img src={props.vertical[0]} alt=\"\" />\n      </div>\n      <div className=\"game-card__content-container\">\n        <div className=\"game-card__name\">{props.gameName}</div>\n        <div className=\"game-card__developer\">{props.gameDeveloper}</div>\n        {/* <div className=\"game-card__description\">{props.gameDescription}</div> */}\n        <div className=\"price-container\">\n          {props.newPrice ? (\n            <div className=\"game-card__discount-percent\">\n              {\"-\" +\n                new Intl.NumberFormat(\"en-GB\", {\n                  style: \"percent\",\n                }).format(props.newPrice / props.oldPrice)}\n            </div>\n          ) : (\n            <></>\n          )}\n\n          <div className={props.newPrice ? \"old-price\" : \"current-price\"}>\n            {props.oldPrice === 0 ? \"Free\" : props.oldPrice + \" rub\"}\n          </div>\n          {props.newPrice ? (\n            <div className=\"new-price\">{props.newPrice + \" rub\"}</div>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n    </Link>\n  );\n}\n","import \"./SecondHeading.css\";\n\ninterface SecondHeadingProps {\n  headingText: string;\n}\n\nexport default function SecondHeadingComponent(props: SecondHeadingProps) {\n  return <h2>{props.headingText}</h2>;\n}\n","import { useEffect, useState } from \"react\";\nimport { GameInterface } from \"../../pages/Search\";\nimport \"./HomeSlideshowItem.css\";\n\ninterface HomeSlideshowProps {\n  activeGameName: string;\n}\n\nexport default function HomeSlideshowItemComponent(props: HomeSlideshowProps) {\n  const [gameToDisplay, setImg] = useState<Array<GameInterface>>();\n\n  useEffect(() => {\n    fetch(\"https://japanese-point.herokuapp.com/api/v1/search\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: `{\"gameName\": \"${props.activeGameName}\"}`,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setImg(data);\n      });\n  }, [props]);\n\n  return (\n    <div className=\"home-slideshow-item\">\n      <img\n        src={gameToDisplay?.[0]?.images?.horizontal[0]}\n        alt=\"\"\n        className=\"home-slideshow-item__image\"\n      />\n    </div>\n  );\n}\n","import \"./HomeSlideshowSidebarItem.css\";\n\ninterface SidebarItemInterface {\n  gameName: string;\n  activeSlideName: string;\n  vertical: Array<string>;\n}\n\nexport default function HomeSlideshowSidebarItemComponent(\n  props: SidebarItemInterface\n) {\n  return (\n    <div className=\"home-slideshow-sidebar-item\">\n      <div className=\"home-slideshow-sidebar-item__content\">\n        <img\n          src={props.vertical[0]}\n          alt=\"\"\n          className=\"home-slideshow-sidebar-item__img\"\n        />\n        <p className=\"home-slideshow-sidebar-item__name\">{props.gameName}</p>\n      </div>\n      <div\n        className={\n          props.gameName == props.activeSlideName\n            ? \"home-slideshow-sidebar-item__progressbar-active\"\n            : \"home-slideshow-sidebar-item__progressbar\"\n        }\n      ></div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { GameInterface } from \"../../pages/Search\";\nimport \"./HomeSlideshow.css\";\nimport HomeSlideshowItemComponent from \"./HomeSlideshowItem\";\nimport HomeSlideshowSidebarItemComponent from \"./HomeSlideshowSidebarItem\";\n\nexport default function HomeSlideshowComponent() {\n  const [gamesInSpotlight, setGamesInSpotlight] = useState<\n    Array<GameInterface>\n  >([]);\n  const [currentActiveGameCounter, setActiveGameCouner] = useState<number>(0);\n  const [currentActiveGame, setActiveGame] = useState<string>(\"\");\n\n  useEffect(() => {\n    fetch(\"https://japanese-point.herokuapp.com/api/v1/search\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: `{\"isInSale\": true}`,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setGamesInSpotlight(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setActiveGameCouner(currentActiveGameCounter + 1);\n      setActiveGame(gamesInSpotlight[currentActiveGameCounter % 4]?.gameName);\n    }, 5000);\n  }, [currentActiveGameCounter, gamesInSpotlight]);\n\n  let spotlightGames = gamesInSpotlight?.map((game) => {\n    return (\n      <HomeSlideshowSidebarItemComponent\n        key={game.gameName}\n        gameName={game.gameName}\n        vertical={game.images.vertical}\n        activeSlideName={currentActiveGame}\n      />\n    );\n  });\n\n  return (\n    <div className=\"home-slideshow\">\n      <div className=\"home-slideshow__active\">\n        <HomeSlideshowItemComponent activeGameName={currentActiveGame} />\n      </div>\n      <div className=\"home-slideshow__sidebar\">{spotlightGames}</div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\r\nimport GameCardWithPriceComponent from \"../components/GameCard/GameCardWithPrice\";\r\nimport NavigationBarComponent from \"../components/NavigationBar/NavigationBar\";\r\nimport SecondHeadingComponent from \"../components/Headings/SecondHeading\";\r\nimport GamePageSlideshowComponent from \"../components/Slideshow/GamePageSlideshow\";\r\nimport { gameDummyData } from \"../gameDummyData\";\r\nimport \"./Home.css\";\r\nimport HomeSlideshowComponent from \"../components/Slideshow/HomeSlideshow\";\r\nimport { useEffect } from \"react\";\r\nimport { GameInterface } from \"./Search\";\r\n\r\nexport default function HomePage() {\r\n  const [gamesInSale, setGamesInSale] = useState<Array<JSX.Element>>();\r\n\r\n  const [fetchedGames, setFetchedGames] = useState<Array<GameInterface>>();\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://japanese-point.herokuapp.com/api/v1/search\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: `{\"isInSale\": true }`,\r\n    })\r\n      .then((responce) => responce.json())\r\n      .then((data) => setFetchedGames(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const gamessInSale = fetchedGames?.map((gameInfo) => {\r\n      return (\r\n        <GameCardWithPriceComponent\r\n          key={gameInfo.id}\r\n          gameId={gameInfo.id}\r\n          gameDescription={gameInfo.gameDescription}\r\n          gameDeveloper={gameInfo.developer}\r\n          gameName={gameInfo.gameName}\r\n          newPrice={gameInfo.gameSalePrice!!}\r\n          oldPrice={gameInfo.gamePrice}\r\n          vertical={gameInfo.images.vertical}\r\n        />\r\n      );\r\n    });\r\n    setGamesInSale(gamessInSale);\r\n  }, [fetchedGames]);\r\n\r\n  return (\r\n    <div className=\"main-page\">\r\n      <div className=\"main-page__content\">\r\n        <NavigationBarComponent />\r\n        <div className=\"slideshow-layout\">\r\n          <HomeSlideshowComponent />\r\n        </div>\r\n        <div className=\"main-page__sales-block\">\r\n          <SecondHeadingComponent headingText=\"Скидки\" />\r\n          <div className=\"main-page__sales-wrapper\">\r\n            <div className=\"main-page__sales-spotlight-list\">\r\n              {/* It will take only firs four games */}\r\n              {gamesInSale?.slice(0, 4)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./GameCardWithHours.css\";\nimport \"./GameCard.css\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\n\ninterface CardProps {\n  gameName: string;\n  gameId: string;\n  gameDeveloper: string;\n  gameDescription: string;\n  minutesInGame: number;\n  vertical: Array<string>;\n}\n\nexport default function GameCardWithHoursComponent(props: CardProps) {\n  const [totalPlayedParsed, setTotalPlayed] = useState({\n    minutes: props.minutesInGame % 60,\n    hours: (props.minutesInGame / 60) >> 0,\n    days: (props.minutesInGame / 1440) >> 0,\n  });\n  const currentPage = useLocation();\n\n  return (\n    <Link className=\"game-card\" to={currentPage.pathname + \"/\" + props.gameId}>\n      <div className=\"img-container\">\n        <img src={props.vertical[0]} alt=\"\" />\n      </div>\n      <div className=\"game-card__content-container\">\n        <div className=\"game-card__name\">{props.gameName}</div>\n        <div className=\"game-card__developer\">{props.gameDeveloper}</div>\n        {/* <div className=\"game-card__description\">{props.gameDescription}</div> */}\n\n        {/* TODO convert time to months + days + ... etc. */}\n        <div className=\"time-container\">{`${totalPlayedParsed.days} days ${totalPlayedParsed.hours} hours ${totalPlayedParsed.minutes} minutes`}</div>\n      </div>\n    </Link>\n  );\n}\n","import \"./GameSearchbar.css\";\n\ninterface SearchbarProps {\n  searchbarString: string;\n  setSearchString: (searchString: string) => void;\n}\n\nexport default function GameSearchbarComponent(props: SearchbarProps) {\n  return (\n    <input\n      type=\"text\"\n      name=\"searchString\"\n      id=\"\"\n      className=\"game-searchbar\"\n      placeholder=\"Search\"\n      value={props.searchbarString}\n      onChange={(e) => {\n        props.setSearchString(e.target.value);\n      }}\n    />\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport GameCardWithHoursComponent from \"../components/GameCard/GameCardWithHours\";\nimport GameListComponent from \"../components/Lists/GameList\";\nimport NavigationBarComponent from \"../components/NavigationBar/NavigationBar\";\nimport GameSearchbarComponent from \"../components/Searchbar/GameSearchbar\";\nimport \"./Library.css\";\nimport { GameInterface } from \"./Search\";\n\nexport default function LibraryPage() {\n  const [searchString, setSearchString] = useState(\"\");\n  const [fetchedGames, setFetchedGames] = useState<Array<GameInterface>>([]);\n\n  useEffect(() => {\n    fetch(\"https://japanese-point.herokuapp.com/api/v1/search\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: `{\"gameName\": {\"$regex\": \".*${searchString}.*\" , \"$options\" : \"i\"  },\n              \"bought\": true}`,\n    })\n      .then((responce) => responce.json())\n      .then((data) => setFetchedGames(data));\n  }, [searchString]);\n\n  let games = fetchedGames.map((game) => {\n    return (\n      <GameCardWithHoursComponent\n        key={game.gameName}\n        gameName={game.gameName}\n        gameDescription={game.gameDescription}\n        gameDeveloper={game.developer}\n        minutesInGame={game.hoursInGame!!}\n        gameId={game.id}\n        vertical={game.images.vertical}\n      />\n    );\n  });\n\n  return (\n    <div className=\"library\">\n      <NavigationBarComponent />\n      <div className=\"library-page-container\">\n        <GameSearchbarComponent\n          searchbarString={searchString}\n          setSearchString={setSearchString}\n        />\n        <GameListComponent games={games} />\n      </div>\n    </div>\n  );\n}\n","import \"./LoadingScreen.css\";\r\n\r\ninterface LoadingScreenProps {\r\n  isEnding: boolean;\r\n}\r\n\r\nexport default function LoadingScreenPage(props: LoadingScreenProps) {\r\n  return (\r\n    <div\r\n      className={\r\n        props.isEnding ? \"banner-container banner__ending\" : \"banner-container\"\r\n      }\r\n    >\r\n      <div className=\"banner\">\r\n        <div className=\"banner__top\">\r\n          <p className=\"banner__text banner__top1\">JAPANESE POINT</p>\r\n          <p className=\"banner__text banner__top2\">JAPANESE POINT</p>\r\n          <p className=\"banner__text banner__top3\">JAPANESE POINT</p>\r\n          <p className=\"banner__text banner__top4\">JAPANESE POINT</p>\r\n          <p className=\"banner__text banner__top5\">JAPANESE POINT</p>\r\n        </div>\r\n        <div className=\"banner__midle\">\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/resources/loading_cube.png\"}\r\n            className=\"banner__cube-img\"\r\n            alt=\"\"\r\n          />\r\n          <p className=\"banner__text banner__midle-text\">\r\n            JAPANESE POINT JAPANESE POINT JAPANESE POINT JAPANESE POINT JAPANESE\r\n            POINT\r\n          </p>\r\n        </div>\r\n        <div className=\"banner__bottom\">\r\n          <p className=\"banner__text banner__bottom5\">JAPANESE POINT</p>\r\n          <p className=\"banner__text banner__bottom4\">JAPANESE POINT</p>\r\n          <p className=\"banner__text banner__bottom3\">JAPANESE POINT</p>\r\n          <p className=\"banner__text banner__bottom2\">JAPANESE POINT</p>\r\n          <p className=\"banner__text banner__bottom1\">JAPANESE POINT</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import NavigationBarComponent from \"../components/NavigationBar/NavigationBar\";\nimport \"./Profile.css\";\n\nexport default function ProfilePage() {\n  return (\n    <div className=\"profile-page\">\n      <NavigationBarComponent />\n      {/* TODO Split into components */}\n      <div className=\"profile-page__flex-container\">\n        <div className=\"profile-page__container\">\n          <div className=\"profile-page__main\">\n            <img\n              src={process.env.PUBLIC_URL + \"/resources/placeholder_user.jpg\"}\n              alt=\"\"\n              className=\"profile-page__avatar\"\n            />\n            <p className=\"profile-page__username\">Example_Username</p>\n          </div>\n          <div className=\"profile-page__data\">\n            <label htmlFor=\"email\">Your email:</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"\"\n              value=\"example@example.com\"\n              disabled\n            />\n\n            <h2 className=\"profile-page__password-heading\">Change password</h2>\n            <label htmlFor=\"profile-page__password\">Your old password:</label>\n            <input\n              type=\"password\"\n              name=\"profile-page__password\"\n              placeholder=\"Enter old password\"\n              id=\"\"\n              className=\"profile-page__password\"\n            />\n            <label htmlFor=\"profile-page__password-new\">\n              Your new password:\n            </label>\n            <input\n              type=\"password\"\n              placeholder=\"Enter new password\"\n              name=\"\"\n              id=\"\"\n              className=\"profile-page__password-new\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport GameCardWithPriceComponent from \"../components/GameCard/GameCardWithPrice\";\nimport GameListComponent from \"../components/Lists/GameList\";\nimport NavigationBarComponent from \"../components/NavigationBar/NavigationBar\";\nimport GameSearchbarComponent from \"../components/Searchbar/GameSearchbar\";\nimport \"./Search.css\";\n\nexport interface GameInterface {\n  gameName: string;\n  id: string;\n  developer: string;\n  gameDescription: string;\n  gamePrice: number;\n  currency: string;\n  isInSale: boolean;\n  gameSalePrice: number | null;\n  bought: boolean;\n  hoursInGame: number | null;\n  isInCart: boolean;\n  images: {\n    vertical: Array<string>;\n    horizontal: Array<string>;\n    logo: string;\n  };\n  videos: Array<string>;\n}\n\nexport default function SearchPage() {\n  const [searchString, setSearchString] = useState(\"\");\n  const [fetchedGames, setFetchedGames] = useState<Array<GameInterface>>([]);\n\n  useEffect(() => {\n    fetch(\"https://japanese-point.herokuapp.com/api/v1/search\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: `{\"gameName\": {\"$regex\": \".*${searchString}.*\", \"$options\" : \"i\"  }}`,\n    })\n      .then((responce) => responce.json())\n      .then((data) => setFetchedGames(data));\n  }, [searchString]);\n\n  let games = fetchedGames!!.map((game) => {\n    return (\n      <GameCardWithPriceComponent\n        gameId={game.id}\n        key={game.gameName}\n        gameName={game.gameName}\n        gameDescription={game.gameDescription}\n        gameDeveloper={game.developer}\n        newPrice={game.gameSalePrice!!}\n        oldPrice={game.gamePrice}\n        vertical={game.images.vertical}\n      />\n    );\n  });\n\n  return (\n    <div>\n      <NavigationBarComponent />\n      <div className=\"search-page-container\">\n        <GameSearchbarComponent\n          searchbarString={searchString}\n          setSearchString={setSearchString}\n        />\n        <GameListComponent games={games} />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport CartPage from \"./pages/Cart\";\r\nimport GamePage from \"./pages/Game\";\r\nimport HomePage from \"./pages/Home\";\r\nimport LibraryPage from \"./pages/Library\";\r\nimport LoadingScreen from \"./pages/LoadingScreen\";\r\nimport ProfilePage from \"./pages/Profile\";\r\nimport SearchPage from \"./pages/Search\";\r\n\r\nexport default function App() {\r\n  const [isFirstLoad, setFirstLoad] = useState(true);\r\n  const [isLoadingEnded, setLoadingEnded] = useState(!isFirstLoad);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://japanese-point.herokuapp.com/api/v1/search\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: `{}`,\r\n    }).then((responce) => {\r\n      setTimeout(() => {\r\n        responce.json();\r\n        setLoadingEnded(true);\r\n        setTimeout(() => setFirstLoad(false), 3000);\r\n      }, 3000);\r\n    });\r\n  }, []);\r\n\r\n  return isFirstLoad ? (\r\n    <LoadingScreen isEnding={isLoadingEnded} />\r\n  ) : (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <HomePage />\r\n        </Route>\r\n        <Route path=\"/search/:gameId\" component={GamePage} />\r\n        <Route path=\"/search\">\r\n          <SearchPage />\r\n        </Route>\r\n        <Route path=\"/library/:gameId\" component={GamePage} />\r\n        <Route path=\"/library\">\r\n          <LibraryPage />\r\n        </Route>\r\n        <Route path=\"/cart\">\r\n          <CartPage />\r\n        </Route>\r\n        <Route path=\"/profile\">\r\n          <ProfilePage />\r\n        </Route>\r\n        <Route path=\"/:gameId\" component={GamePage} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport SearchPage from \"./pages/Search\";\nimport LibraryPage from \"./pages/Library\";\nimport CartPage from \"./pages/Cart\";\nimport ProfilePage from \"./pages/Profile\";\nimport GamePage from \"./pages/Game\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}